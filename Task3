/*TO-DO-LIST*/

#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Function to display the menu options
void showMenu() {
    cout << "\nTo-Do List Manager\n";
    cout << "1. Add Task\n";
    cout << "2. View Tasks\n";
    cout << "3. Delete Task\n";
    cout << "4. Exit\n";
    cout << "Choose an option (1-4): ";
}

// Function to add a new task to the list
void addTask(vector<string>& tasks) {
    string task;
    cout << "Enter the task description: ";
    cin.ignore();  // To clear any leftover input buffer
    getline(cin, task);  // Allows the user to input a multi-word task
    tasks.push_back(task);  // Adds the task to the vector
    cout << "Task added successfully!" << endl;
}

// Function to display all tasks
void viewTasks(const vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks available.\n";
    } else {
        cout << "\nYour Tasks:\n";
        for (int i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". " << tasks[i] << endl;
        }
    }
}

// Function to delete a task from the list
void deleteTask(vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks available to delete.\n";
        return;
    }

    int taskIndex;
    viewTasks(tasks);
    cout << "Enter the task number to delete: ";
    cin >> taskIndex;

    // Check if the input index is valid
    if (taskIndex < 1 || taskIndex > tasks.size()) {
        cout << "Invalid task number. Please try again.\n";
    } else {
        tasks.erase(tasks.begin() + taskIndex - 1);  // Removes the task from the vector
        cout << "Task deleted successfully!" << endl;
    }
}

int main() {
    vector<string> tasks;  // Vector to store the tasks
    int choice;

    do {
        showMenu();  // Display menu options
        cin >> choice;

        switch (choice) {
            case 1:
                addTask(tasks);  // Add a new task
                break;
            case 2:
                viewTasks(tasks);  // View all tasks
                break;
            case 3:
                deleteTask(tasks);  // Delete a task
                break;
            case 4:
                cout << "Exiting To-Do List Manager. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please choose a valid option (1-4).\n";
                break;
        }
    } while (choice != 4);  // Loop until the user chooses to exit

    return 0;
}
